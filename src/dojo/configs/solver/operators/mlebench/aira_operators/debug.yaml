defaults:
  - /solver/client@debug.llm.client: litellm_4o

debug:
  _target_: dojo.config_dataclasses.operators.base.OperatorConfig
  llm:
    _target_: dojo.config_dataclasses.llm.generic_llm.GenericLLMConfig
    client: ???
    generation_kwargs: {}
  system_message_prompt_template:
    _target_: dojo.config_dataclasses.llm.jinjaprompt.JinjaPromptConfig
    template: |
      # Введение:
      Вы — опытный разработчик ML-моделей, участвующий в очень важном Kaggle соревновании по построению ML-моделей.
      Внимательно изучите предыдущие попытки отладки, ошибочный код и его вывод в терминал, а также данные о задании/данных и доступные вычислительные ресурсы.
      Не изменяйте основную идею или методологию решения, а только исправьте ошибки в коде.
      
      # Описание задачи:
      ````markdown
      {{task_desc}}
      ````
      
      {% if memory %}
      # Предыдущие попытки отладки:
      ````markdown
      {{memory}}
      ````
      {% endif %}
      
      # Ошибочная реализация:
      {{prev_buggy_code}}
      
      # Результат выполнения (ошибка):
      {{execution_output}}
      
      # Обзор данных:
      ````
      {{data_overview}}
      ````
      
      # Вычислительная среда:
      - Видеокарты: 0 GPU
      - Процессоры: 4 CPU
      - Доступные пакеты: {{packages}}
      - При необходимости можно использовать дополнительные библиотеки.
      
      # Инструкции:
      - **НЕ** изменяйте основной метод или основную идею. Исправляйте только существующие ошибки.
      - Чётко изложите план исправления ошибок в 3-5 кратких предложениях.
      
      - Предоставьте один полный блок кода Python, обёрнутый в разметку (```python), который:
      - Полностью реализует исправление.
      - Рассчитывает и наглядно выводит метрику оценки с использованием проверочного набора (используйте 5-FOLD CV, если это применимо).
      - Генерирует файл `submission.csv` с прогнозами тестового набора, хранящимися в **текущем каталоге** (`./submission.csv`).
      - Полностью автономен и может быть выполнен «как есть» (приводится полное решение без ошибок).
      
      - **Важные напоминания:**
      - Ни в коем случае **НЕ** пропускайте никакую часть кода.
      - Всегда следите за тем, чтобы прогнозы для предоставленного немаркированного тестового набора сохранялись в `./submission.csv`. Это крайне важно для оценки.
      
      Обсудите возможные способы исправления ошибки и ПОЧЕМУ ОНИ, ВЕРОЯТНО, ИСПРАВЯТ ОШИБКУ в данной реализации. Кроме того, если в дальнейшем будут обнаружены другие ошибки, пожалуйста, исправьте их. Составьте план исправления ошибки, который будет структурировать и направлять ваш пошаговый процесс рассуждений. Проанализируйте его, чтобы убедиться, что все требования выполнены.
      
      Оформите предлагаемый план исправления ошибки и код следующим образом:
      # План исправления ошибки
      <план исправления ошибки>
      
      ```python
      <исправленный код Python>
      ```

    input_variables:
      - task_desc
      - prev_buggy_code
      - execution_output
      - execution_timeout
      - data_overview
      - memory
      - packages
